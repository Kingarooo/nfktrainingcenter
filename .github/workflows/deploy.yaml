name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Install dependencies
        run: npm ci

      - name: Build with Vite
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: ./dist

  deploy:
    name: Deploy to gh-pages branch
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: ./dist

      - name: Extract and deploy to gh-pages
        run: |
          tar -xf ./dist/artifact.tar -C ./dist
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git checkout --orphan gh-pages
          git rm -rf .
          cp -r ./dist/* .
          # Copy CNAME file for custom domain
          cp ./public/CNAME . 2>/dev/null || echo "nfktrainingcenter.pt" > CNAME
          git add .
          git commit -m "Deploy to gh-pages"
          git push origin gh-pages --force

  report-build-status:
    name: Report build status
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()
    steps:
      - name: Report status
        run: |
          gh api -X POST "repos/$GITHUB_REPOSITORY/pages/telemetry" \
            -f build_status="${{ needs.build.result }}" \
            -f deploy_status="${{ needs.deploy.result }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
